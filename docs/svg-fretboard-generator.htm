<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm" version="2022-01-17" editor="usp" />
<meta name="author" content="usp" />
<meta name="creation-date" content="2021-09-10" />
<meta name="editor" content="usp" />
<meta name="change-date" content="2021-09-21" />
<meta name="version" content="1" />
<meta name="categories" content="Web Design > Music Toolbox, Web Technologies > SVG" />
<meta name="tags" content="programming, web, design, toolbox, project, svg, javascript, music, guitar, fretboard, generator" />
<meta name="description" content="This version of the fretboard generator is based on SVG. Compared with previous versions, which used PNG images and HTML tables, the code base was dramatically simplified.<br/>A multitude of configuration options and CSS allow an author to create rich and beautiful diagrams." />

<link rel="stylesheet" href="/inc/page.css" />
<link rel="stylesheet" href="/inc/music/fretboard-5.css" />
<script type="module">
import * as fretboard from "/inc/music/fretboard-5-new.js";
globalThis.fretboard = fretboard;
fretboard.setModuleOptions ( {
	stringheaders : [ "stringnumber" , "fullnote" ],
	fretmarkers : "both" ,
	stringSpacing : 20 ,
	fretSpacing : 25 ,
	markerTextSize : 9 ,
	stringheaderTextSize : 9 ,
	stringtrailerTextSize : 10 ,
	cellTextSize : 12 
	}	) ;
</script>

<title>Music Toolbox - Fretboard Generator</title>
</head><body><header id="page-header"></header><div id="main-toolbar"></div><main id="page-content">

<h1>Fretboard Generator</h1>

<p id="page-abstract"></p>

<figcaption class="figure">A generated fretboard diagram</figcaption>
<svg id="fb-00" class="fretboard" version="1.1" style="margin:10px"></svg>
<script type="module">
fretboard.createFretboard( "fb-00", { stringheaders : ["fullnote"] , fretmarkers : "bottom" , fretrange : [2, 4] , spacing : [ 25, 20 ] , show : "intervalName" ,
	displaySet : { nn : "note name", in: "interval name", fn: "finger number", none: "" } ,
	cellsets : [ [ 
		{ s : 1 , f : 3 , nn : "G" , in : "O" , fn : 1 , opt : 1 } ,
		{ s : 2 , f : 3 , nn : "D" , in : "p5" , fn : 1} ,
		{ s : 3 , f : 4 , nn : "B" , in : "M3" , fn : 5 } ,
		{ s : 4 , f : 4 , nn : "F#" , in : "M7" , fn : 4 } ,
		{ s : 6 , f : 3 , nn : "G" , in : "R" , fn : 1 }
		] , [ 
		{ s : 1 , f : 3 , nn : "G" , in : "O" , fn : 1 , opt : 1 } ,
		{ s : 2 , f : 3 , nn : "D" , in : "p5" , fn : 1} ,
		{ s : 3 , f : 3 , nn : "Bb" , in : "m3" , fn : 5 } ,
		{ s : 4 , f : 3 , nn : "F" , in : "m7" , fn : 4 } ,
		{ s : 6 , f : 3 , nn : "G" , in : "R" , fn : 1 }
		]	]	,
	}	) ;
fretboard.addChordPattern( "fb-00", "GM7" )
	.addNote( 1, 3, "G", "O", 1, true )
	.addNote( 2, 3, "G", "p5", 1 )
	.addNote( 3, 4, "G", "M3", 1 )
	.addNote( 4, 4, "G", "M7", 1 )
	.addNote( 6, 3, "G", "R", 1 ) ;
fretboard.addChordPattern( "fb-00", "Gm7" )
	.addNote( 1, 3, "G", "O", 1, true )
	.addNote( 2, 3, "G", "p5", 1 )
	.addNote( 3, 3, "G", "m3", 1 )
	.addNote( 4, 3, "G", "m7", 1 )
	.addNote( 6, 3, "G", "R", 1 ) ;
fretboard.addScalePattern( "fb-00", "C major scale" )
	.addNote
	/*
window.setInterval( ( function( ) {
	// This is an IEFE, returning a closure. The scope is kept
	// alive as long as the caller hold a reference to the inner function.
	const what = [ "noteName", "intervalName", "fingerNumber", "" ];
	let i = 0;
	const e = document.getElementById ( "fb-00" ) ;
	return function ( evt ) { fretboard.show ( e, what[ i ++ ] ) ; i %= 4 ; } 
	} ) ( ) , 2000 ) ;
	*/
window.setInterval ( function ( ) { 
	const e = document.getElementById ( "fb-00" ) ;
	let i = ( parseInt( e.getAttribute( "active-cellset" )) + 1 ) % 2;
	fretboard.activateCellSet( e, i );
	} , 2000 ) ;
</script>

<p>The associated CSS file allows to tweak colors and sizes.</p>

<h2 cbc>Overview</h2><div>

<p>A fretboard diagram is used to visualize <em>scale</em> and <em>chord patterns</em> on the fretboard. A diagram can hold and show multiple patterns, for example to show variants of a chord pattern, or visualize a chord on the underlying scale.</p>

<p>The fretboard component can show multiple patterns at the same time, which often doesn't make sense, but sometimes it is quite useful. The display of information is completely controlled by the application, i. e. the page author has full control over what is displayed, and when.</p>

<!-- h2 Overview --></div>

<h2 cbc>Module Usage</h2><div>

<h3 cbc>TEST</h3><div>
<p>test test test</p>
</div>

<p>To use this module, import the script module:</p>

<p>Then import the css and script modules:</p>

<pre>
&lt;link rel="stylesheet" href="/inc/music/fretboard-5.css" /&gt;
&lt;script type="module"&gt;
<hi>import</hi> * as fretboard from "<hi>/inc/music/fretboard-5.js</hi>";
globalThis.fretboard = fretboard;  <cc>// optional</cc>
&lt;/script&gt;
</pre>

<p>This makes the exported module functions available as members of the <tt>fretboard</tt> object. If you need the <tt>fretboard</tt> object in other script elements on the page, make the <tt>fretboard</tt> object available as member of <tt>globalThis</tt> (which is identical to window in browsers).</p>

<p>To create a fretboard diagram, add an SVG element to the document, give it an <tt>id</tt> attribute and call the <tt>fretboard.createFretboard( )</tt> method with configuration parameters:</p>

<figcaption class="listing">Generator script</figcaption><pre>
&lt;svg id="fb-01" class="fretboard" version="1.1"&gt;&lt;/svg&gt;
&lt;script type="module"&gt;
fretboard.createFretboard( "fb=01", { stringheaders : ["fullnote"] , 
    fretrange : [2, 4] , show : "intervalName" ,
    cells : [ 
    { s : 1 , f : 3 , nn : "A" , in : "O" , fn : 1 , opt : 1 } ,
    { s : 2 , f : 3 , nn : "F" , in : "p5" , fn : 1} ,
    { s : 3 , f : 4 , nn : "C" , in : "M3" , fn : 5 } ,
    { s : 4 , f : 4 , nn : "G#" , in : "M7" , fn : 4 } ,
    { s : 6 , f : 3 , nn : "A" , in : "R" , fn : 1 }
    ] } );
&lt;/script&gt;
</pre>
<p>This generates the following diagram:</p>

<figcaption class="figure">Generated diagram</figcaption>
<svg id="fb-01" class="fretboard" version="1.1" style="margin:10px"></svg>
<script type="module">
fretboard.createFretboard( "fb-01", { stringheaders : ["fullnote"] , fretmarkers : "bottom" , fretrange : [2, 4] , spacing : [ 25, 20 ] , show : "intervalName" ,
	cells : [ 
	{ s : 1 , f : 3 , nn : "A" , in : "O" , fn : 1 , opt : 1 } ,
	{ s : 2 , f : 3 , nn : "F" , in : "p5" , fn : 1} ,
	{ s : 3 , f : 4 , nn : "C" , in : "M3" , fn : 5 } ,
	{ s : 4 , f : 4 , nn : "G#" , in : "M7" , fn : 4 } ,
	{ s : 6 , f : 3 , nn : "A" , in : "R" , fn : 1 }
	] } );
</script>

<!-- h2 Module Usage --></div>

<h2 cbc>createFretboard( ) Syntax</h2><div>

<p>To create a fretboard diagram, use the follwing script command:</p>

<pre>fretboard.createFretboard( container, options );</pre>

<p>The container is the id of the SVG container element in the document, or an object reference. The options parameter is a JavaScript object with mandatory and optional members.</p>

<h3 cbc>Mandatory Members</h3><div>

<dl>
<dt>fretrange</dt>
<dd>Specifies the lowest and highest fretnumber of the diagram. Example:</dd>
<dd>fretrange : [2, 4]</dd>

<dt>show</dt>
<dd>Specifies which kind of information to display in the cells.</dd>
<dd>Possible values: none, intervalName, noteName, fingerNumber.</dd>
<dd>Example:</dd>
<dd> show: "intervalName"</dd>

<dt>cells</dt>
<dd>Cellset definition, an array of multiple cell descriptors. Example:</dd>
<dd>cells: [ cd1, cd2, cd3 ]</dd>
<dd>Each cell descriptor has the following syntax:</dd>
<dd>{ s : 1 , f : 3 , nn : "A" , in : "O" , fn : 1 , opt : 1 }</dd>
<dd>s = string number</dd>
<dd>f = fret number</dd>
<dd>nn = note name</dd>
<dd>in = interval name</dd>
<dd>fn = finger number</dd>
<dd>opt = optional note</dd>
<dd>String and fret numbers are mandatory, the others are optional.</dd>
<dd>Interval names are used to style the cells. A root note (R) has a dark orange background, octaves above the root (O) have a light orange color. Note that the interval name "O" is converted to "R" in the text setter routine. Optional notes in the pattern have a dotted outline. See <tt>fretboard-4.css</tt> for details.</dd>
</dl>

<!-- h3 Mandatory Members --></div>

<h3 cbc>Optional Members</h3><div>

<p>Optional members control appearance of the diagram.</p>

<dl>
<dt>fretmarkers</dt>
<dd>Defines the appearance of fretmarkers. Possible values: top, bottom, both. If omitted, no fretmarkers will be shown. Default value: bottom. Example:</dd>
<dd>fretmarkers: "both"</dd>

<dt>spacing</dt>
<dd>Array with two numbers, defines the space between frets and strings. Default value: [20, 20]. Example:</dd>
<dd>spacing: [10, 10]</dd>
<dd>This generates a small overview diagram, not suitable for text display.</dd>
<dd><svg id="d-02" class="fretboard" version="1.1" style="margin:10px"></svg></dd>
<script type="module">
fretboard.createFretboard ( "d-02", { spacing : [10,10] , fretrange : [0, 5] , stringheaders: "none" , showAttributes : [ "" ] ,
	cells : [
	{ s : 1 , f : 0 , nn : "A" , in : "O" , fn : 1 , opt : 1 } ,
	{ s : 2 , f : 0 , nn : "F" , in : "p5" , fn : 1} ,
	{ s : 3 , f : 4 , nn : "C" , in : "M3" , fn : 5 } ,
	{ s : 4 , f : 4 , nn : "G#" , in : "M7" , fn : 4 } ,
	{ s : 6 , f : 0 , nn : "A" , in : "R" , fn : 1 }
	] } );
</script>

<dt>fontsizes</dt>
<dd>Array of numbers, defines the size of cell, header and marker fonts, in this order. Default values are calculated automatically from fret and strings spacings, but you can override them if you whish. Example:</dd>
<dd>fontsizes: [11, 9, 9]</dd>

<dt>strings</dt>
<dd>Array of strings. Defines the string set tuning notes. Default values are for a 6-string guitar in standard tuning:</dd>
<dd>strings = [ "E4", "B3", "G3", "D3", "A2", "E2" ]</dd>
<dd>The number of entries define the number of strings.</dd>

<dt>stringheaders</dt>
<dd>Array of strings. Defines if and what information is shown in front of the diagram. Possible values: "number", "notename", "fullname". Example:</dd>
<dd>strinheaders: [ "fullname", "number" ]</dd>

<dt>cellsets</dt>
<dd>Array of cellset (cells) descriptors. A diagram (in an upcoming version) can show multiple fret board patterns, for example to show an animation or multiple variants of a chord. By default, the first cellset is shown in the diagram.</dd>
</dl>

<!-- h3 Optional Members --></div>

<!-- h2 createFretboard( ) Syntax --></div>

<h2 cbc>Styling</h2><div>

<p>The appearance of fretboard diagrams is defined in <tt>fretboard-4.css</tt>:</p>

<figcaption class="listing">fretboard-4.css</figcaption><pre>
svg.fretboard {
	font-family : "Arial Narrow", "Franklin Gothic Medium" ;
	}
svg.fretboard text {
	text-anchor : middle ;
	stroke: none ;
	fill : black ;
	}
svg.fretboard rect {
	stroke-width : 0.7px ;
	stroke: black ;
	fill : white ;
	}
svg.fretboard path {
	stroke-width : 0.7px ;
	stroke: black ;
	fill : white ;
	}
svg.fretboard circle {
	stroke-width : 0.8px ;
	stroke: black ;
	fill : white ;
	}
svg.fretboard line {
	stroke : #606060 ;
	}
svg.fretboard g.cellset rect {
	fill : #EEE ;
	}
svg.fretboard g.frets line.nut {
	stroke-width : 2 ;
	}
svg.fretboard g.fretmarkers {
	fill : brown ;
	}
svg.fretboard g.cellset rect[root]{
	fill: darkorange ;
	}
svg.fretboard g.cellset text[root]{
	fill: white ;
	}
svg.fretboard g.cellset rect[octave]{
	fill : #ffd199 ;
	}
svg.fretboard g.cellset rect[optional]{
	stroke-dasharray : 1 2 ;
	}
</pre>

<p>Some suggestions for customization: Note background color, root note colors, string names and numbers without circle.</p>

<!-- h2 Styling --></div>

<h2 cbc>Implementation Details</h2><div>

<p>Text information is stored in cells. Related notes cells are grouped in a container, a <tt>g</tt> element with a classname of  <tt>cellset</tt>.</p>

<p>The module configuration stores control options for all diagrams, except cell data. The diagram configuration overrides the module configuration for a single diagram. Module diagram options must be overridden in diagram configuration options. Unused module diagram options may be delete in the module import script on the page.</p>

<p>The procedure of drawing the diagram is slit in two parts. The first creates the base structure (grid, string headers, fretboard markers) and sets the SVG container viewBox dimensions. The second part creates scale and chord patterns as they are created. This part is "live", the patterns are painted as soon as they are created.</p>

<p>This partitioning is reflected in the way how the diagram is configured: Basic configuration data is passed to the constructor via an options parameter. This information is used to set and overwrite default configuration values and paint the base structure.</p>

<p>Painting the base structure can be suppressed by passing a <tt>delayPaint=true</tt> member in the <tt>options</tt> parameter. Then you have the opportunity to configure the diagram object with configuraion method calls. They all return <tt>this</tt> and can therefore be chained. When finished, the base structure can be created with <tt>paintBaseStructure()</tt>.</p>

<figcaption class="listing">Configuring the base structure with method calls</figcaption>
<pre>const fb00 = new fretboard.FretboardDiagram( "fb-00", 3, 7, 
    { <hi>delayPaint:true</hi> } )
    .addStringHeaders( "number" )
    .setFretMarkers( "both" )
    .<hi>paintBaseStructure()</hi> ;
</pre>

<p>A pattern can define string trailer sets. These are shown on the left side of the diagram and may enlarge the container viewbox.</p>



<h3 cbc>Information Display</h3><div>

<p>A diagram can display one of several patterns (scale or chord shapes). A pattern stores multiple information (note names, interval names, finger numbers, flags, alternatives.</p>

<ul>
<li>Active cellset</li>
<li>Cell set display names</li>
<li>Cell sets</li>
<li>Active attribute</li>
<li>Attribute names</li>
<li>Attribute display names</li>
</ul>

<!-- h3 Information Display --></div>

<!-- h2 Implementation Details --></div>

</main><script type="module" src="/inc/page.js" ></script></body></html>